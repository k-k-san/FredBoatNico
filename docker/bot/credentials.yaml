---

################################################################
###                    *** WARNING ***
################################################################
###
### ALMOST EVERYTHING REQUESTED IN THIS FILE ARE CONFIDENTIAL CREDENTIALS
### IF YOU POST THIS FILE ONLINE (such as on GitHub) YOUR BOT COULD BE COMPROMISED
###
###
### Use a proper text editor when editing this file, for example Sublime.
### Do not use tab characters in this file, use plain spaces.
###
### Keep at least one space after a colon, like so:
###
###   key: value
###
### You can wrap most values into quotation marks, except numbers and booleans:
###
###   someUrl: "http://example.com"
###   someToken: "123.qwe.456[DFG="
###   somePortNumber: 22
###   useSomeFeature: true
###
### More information on correctly formatting yaml files: http://www.yaml.org/start.html



################################################################
###                 Essential credentials
################################################################

# Add your discord bot token below to the beta and patron slots, between the quotation marks
token: # Don't remove or add anything in this line. This is how a map works in YAML. Just edit the lines below.
  # Find the token of your bot on https://discordapp.com/developers/applications/me
  # Tutorial: https://github.com/reactiflux/discord-irc/wiki/Creating-a-discord-bot-&-getting-a-token
  beta:    "PutYourDiscordBotTokenHere"
  patron:  "PutYourDiscordBotTokenHere"


# Used by the ;;split and ;;np commands. Must be hooked up to the Youtube Data API.
# Add your google API key between the quotation marks
# How to get the key: https://developers.google.com/youtube/registering_an_application
googleServerKeys: "PutYourGoogleAPIKeyHere"



################################################################
###                     Optional APIs
################################################################

# For play NicoNicoDouga
nicoUser:       ""
nicoPassword:   ""

# For the ;;mal command
# Create an account on https://myanimelist.net/ and enter its login below
malUser:        ""
malPassword:    ""


# Used to access imgur galleries for some RandomImageCommands
# Acquired from here: https://api.imgur.com/oauth2/addclient
# Choose an option that does not require an Authorization callback URL
imgurClientId:  ""


# Used to retrieve Spotify playlists
# Get them from here: https://developer.spotify.com/my-applications
spotifyId:      ""
spotifySecret:  ""


# Used by ;;weather command.
# Get them from: http://openweathermap.org/appid
openWeatherKey: ""



################################################################
###        Developers and very experienced users only
################################################################


# FredBoat was written to work with PostgreSQL.
# If you are running with docker-compose then you don't need to change the jdbcUrl here.
# In PostgreSQL, role means user and vice versa. Keep that in mind when reading the following help and the provided links.
# If you are running your own PostgreSQL database, you will need to provide a role and a database belonging to that role.
# The role needs at least the permission to log in.
# Learn more about roles here: https://www.postgresql.org/docs/10/static/database-roles.html
# Learn more about creating databases here: https://www.postgresql.org/docs/10/static/manage-ag-createdb.html
# Learn more about the postgres jdbc url here: https://jdbc.postgresql.org/documentation/head/connect.html
# If you are using an SSH tunnel, you need to point your jdbc url to localhost:9333
# Example jdbc: "jdbc:postgresql://localhost:5432/fredboat?user=fredboat&password=youshallnotpass"
jdbcUrl:           ""


# Ssh tunnel for a remote database. this is useful for when you don't want to expose your database on the remote server
# and instead use ssh tunneling to access it
# If you are running with docker-compose then you don't need to change any ssh value here.
# If you are using an SSH tunnel, you need to point your jdbc url to localhost:9333
useSshTunnel:      false
sshHost:           ""         # add the ssh port to the ip / url, usually 22, for example: "db.example.com:22"
sshUser:           ""         # user on the remote machine
sshPrivateKeyFile: ""         # path to an ssh private key file which is authorized to log in to the sshUser on the remote machine. learn how to create these: https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-16-04#step-four-â€”-add-public-key-authentication-(recommended)
sshKeyPassphrase:  ""         # optional passphrase for the ssh key file
tunnelLocalPort:   5432       # endpoint port of the tunnel on the machine running fredboat; makes sure these dont collide; this one needs to be used in the jdbc url
tunnelRemotePort:  5432       # port of the PostgreSQL on the remote machine, 5432 by default

# Database for caching things, see config of main database above for details about the individual values.
# You only need to configure this if you want to have these in two different places (can be two databases in a single postgres).
# By default (= if not configured) the cache database will use the same jdbc url as the main database.
# The main benefit is that you don't have to backup/migrate the cache database, it can just be dropped/recreated
# If you are going to use ssh tunnels for both database connections, make sure that the local tunnel ports don't collide
cacheJdbcUrl:           ""
cacheUseSshTunnel:      false
cacheSshHost:           ""
cacheSshUser:           ""
cacheSshPrivateKeyFile: ""
cacheSshKeyPassphrase:  ""
cacheTunnelLocalPort:   5433
cacheTunnelRemotePort:  5432



# Additional google keys
# If you find yourself running a big bot and hitting youtube API ratelimits, you can add several keys via the list below.
# Remember to comment out the other "googleServerKeys" entry in this file, you can have only one of them.
# FredBoat will pick the keys by random to to access Youtube.
#googleServerKeys: ["Key1", "Key2", "Key3"]


# error aggregation service
sentryDsn: ""


# If you are running lavalink nodes this is the place to add them.
# Examples shown below, don't forget to uncomment them properly.
# More on Lavalink: https://github.com/Frederikam/Lavalink
#lavalinkHosts:
  #"ws://localhost:5555": "youshallnotpass"
  #"ws://192.168.1.20:5556": "youshallnotpass"
  #"ws://lavalink.example.com:5557": "youshallnotpass"


# Webhooks to Discord channels that will post some guild stats and shard status changes
# More information on webhooks: https://support.discordapp.com/hc/en-us/articles/228383668-Intro-to-Webhooks
# Example: "https://canary.discordapp.com/api/webhooks/1234567890/QWERTZUIOPasdfghjklYXCVBNM" (no, this one will not work)
eventLogWebhook:            "" # webhook url for connect / disconnect events
eventLogInterval:           1  # interval at which connect / disconnect events are posted in minutes
guildStatsWebhook:          "" # webhook url for guild stats
guildStatsInterval:         60 # interval at which guild stats are posted in minutes


# Post build tool test results into a discord channel. The token must be a discord bot token.
testToken:     ""
testChannelId: ""
